swagger: "2.0"
info:
  version: "2017-01-27T16:48:55Z"
  title: box-node-cognito-token-exchange-api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /token:
    get:
      description: Exchanges an AWS Cognito user ID token for a Box App User access token.
      operationId: tokenExchange
      produces:
        - application/json
      security: 
        - box-cognito-integration-authorizer: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/boxToken"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/error"
      x-amazon-apigateway-integration:
        credentials: arn:aws:iam::{account_id}:role/box-node-cognito-token-exchange-api-role
        responses:
          default:
            statusCode: "200"
        uri: arn:aws:apigateway:{region}:lambda:path/2015-03-31/functions/arn:aws:lambda:{region}:{account_id}:function:box-node-cognito-token-exchange-lambda/invocations
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
securityDefinitions: 
  box-cognito-integration-authorizer: 
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: cognito_user_pools
    x-amazon-apigateway-authorizer:
      type: cognito_user_pools
      providerARNs:
        - arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}
definitions:
  boxToken: 
    title: BoxAccessToken
    type: object
    properties:
      accessToken:
        type: string
      accessTokenTTLMS:
        type: integer
      acquiredAtMS:
        type: string
        format: date-time
  Empty:
    type: "object"
    title: "Empty Schema"
  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string